// Package main provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package main

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"ECcxE3LQD7oBWowW/w8AAP//aX66JFE7AAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
